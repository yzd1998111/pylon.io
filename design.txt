{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;\csgray\c100000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 The core problem that underlies this project is AI pathfinding, socket for multiplayer, collision detection, imaging processing for land, and expectation for illegal input. \
\
The AI pathfinding is the biggest problem of my term project. I spent over 50 hours achieving what I have done so far. Basically, I researched online about pathfinding algorithms and implemented A*  pathfinding algorithm after reading a large amount of lecture notes, research paper, and code. Then I realize that the problem is original pathfinding algorithm cannot achieve the smooth moving for my game. Basically, ship and cars turn in a different way as tank. They steer in a different way. Also, the original algorithm only includes movement in 45 degrees multiples. So player can only move straightly horizontal, vertical or diagonal directions, which is not realistic. I modified the original algorithm through changing the heuristics for the algorithm. Instead of calculating the direct manhattan distance between two points, I add a variable to make multiple turning unfavorable. So that the ship will be moving like this: straight, diagonal, straight ,diagonal,  straight ,diagonal, straight but diagonal, diagonal, diagonal, straight. This is still not enough, because, for instance, if the player is facing NE and I want the ship to face SW, the original algorithm allows the player to do so instantly, but I modified the algorithm to add smooth turn before heading straight to the destination. The algorithm still gives the shortest legal path with turning because I calculate the turn radius of the ship at given speed and angular speed and simulate the motion to check whether they are legal before going on to implement. If one more efficient direction does not work, the algorithm will check another less efficient direction. If both illegal, the algorithm ignores the player\'92s request. Also, if the requested destination is illegal because it is out of the map or inside a land, the algorithm finds another destination for the player through a simple recursion. Based on this algorithm, the AI is able to achieve escape, wander( look for gold), attack, and chase actions, which is pretty amazing. (AI designed with finite state machine, basically, it is a set of state transitions through evaluating certain conditions during its execution.)\
\
The biggest problem of socket is lag. Lag issue is quite serious and I had to modify Rohan\'92s sample way of processing client and server messages. Instead of putting the serverMsg into a queue and executing them through taking them out from the queue, I execute the message from server directly. This reduces lag significantly. However, when the number of player increases or if a player strike keys like insane, the server queue will still be jammed and sadly, I failed to find a solution to this problem, so I did not make the death match mode of my game because I don\'92t think the game will be smooth enough with two teams of players instead of two players. Though non blocking socket is designed for larger scale multiplayer game.. Anyway. Communication between players is enabled, irresponsible quit of a player is safely dealt with. Players can change their name though the default name is Kosbie. \
\
Collision detection is simple. Simply calculating the distance between two objects and see if it is greater than the sum of their radius. I store the land coordinates in a list for checking collision because the land occupies too many points. The land is made through numpy and PIL, basically, you can put any white/black/whatever background color png in the image file and it will process the image for you and generate the a randomly placed land of that image in the map.\
\
If you try to play multiplayer without laughing the server, you will simply get the response, sorry, you are not connected to the server in the middle of front page for 1 second. \
\
The instruction page will only be played when the program is first launched. Player can view it again through pressing the instruction. i tried to use MSI and Apple\'92s way of offering instruction when people first turn on their product. Black background with white text. Simple and clear.   }